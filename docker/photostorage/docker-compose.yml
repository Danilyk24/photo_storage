version: '3.3'

# DOCKER_RUBY_VERSION: 2.6.6
# POSTGRES_VERSION: 12.2
# REDIS_VERSION: 5
# NGINX_VERSION=1.18.0
# POSTGRES_DB: photos
# GO_VERSION=1.14.2

services:
  web:
    build:
      context: ../../
      dockerfile: docker/photostorage/Dockerfile
      args:
        DOCKER_RUBY_VERSION: ${DOCKER_RUBY_VERSION:-2.6.6}
    env_file: .env
    stdin_open: true
    tty: true
    depends_on:
      - db
      - redis
    volumes:
      - static-files:/photostorage/public
      - upload:/photostorage/tmp/files

  sidekiq:
    build:
      context: ../../
      dockerfile: docker/photostorage/Dockerfile
      args:
        DOCKER_RUBY_VERSION: ${DOCKER_RUBY_VERSION:-2.6.6}
    env_file: .env
    depends_on:
      - db
      - redis
      - web
    command: bundle exec sidekiq -C config/sidekiq.yml
    volumes:
      - upload:/photostorage/tmp/files
    external_links:
      - nginx

  db:
    image: postgres:${POSTGRES_VERSION:-12.2}-alpine
    environment:
      - POSTGRES_DB=${POSTGRES_DB:-photos}
      - POSTGRES_HOST_AUTH_METHOD=trust
    volumes:
      - pg-data:/var/lib/postgresql/data
      - ./configs/dumps/pg:/docker-entrypoint-initdb.d:ro

  redis:
    image: redis:${REDIS_VERSION:-5}-alpine
    volumes:
      - redis-data:/data

  proxy:
    build:
      context: ../../
      dockerfile: docker/photostorage/Dockerfile.proxy
      args:
        GO_VERSION: ${GO_VERSION:-1.13.7}
    depends_on:
      - db
      - web

  nginx:
    image: nginx:${NGINX_VERSION:-1.18.0}-alpine
    depends_on:
      - web
      - proxy
    volumes:
      - static-files:/home/photos/public
      - cache:/var/cache/nginx
      - ./templates/nginx.conf:/etc/nginx/nginx.conf
      - ./templates/default.conf.template:/etc/nginx/conf.d/default.conf.template
    env_file: .env
    environment:
      - RAILS_HOST=web
      - PROXY_HOST=proxy
    ports:
      - "8080:8080"
    command: /bin/sh -c "FRONT_HOST=$$(echo -n $$HOST | sed -r 's/\:[0-9]+$$//') envsubst '$$$$RAILS_HOST $$$$FRONT_HOST $$$$PROXY_HOST' < /etc/nginx/conf.d/default.conf.template > /etc/nginx/conf.d/default.conf && nginx -g 'daemon off;'"
    networks:
      default:
        aliases:
          - photos.localhost
          - www.photos.localhost

volumes:
  pg-data:
    driver: local

  redis-data:
    driver: local

  static-files:
    driver: local

  cache:
    driver: local

  upload:
    driver: local
