ARG NGINX_VERSION=1.17.9

FROM alpine AS builder
ARG NGINX_VERSION
ENV NGINX_VERSION=${NGINX_VERSION}

RUN apk --no-cache --no-cache add git
RUN wget "http://nginx.org/download/nginx-${NGINX_VERSION}.tar.gz" -O nginx.tar.gz
RUN mkdir -p /usr/src

RUN git clone https://github.com/openresty/set-misc-nginx-module.git && \
 git clone https://github.com/openresty/encrypted-session-nginx-module.git && \
 git clone https://github.com/vision5/ngx_devel_kit.git

RUN apk add --no-cache --virtual .build-deps \
  gcc \
  libc-dev \
  make \
  openssl-dev \
  pcre-dev \
  zlib-dev \
  linux-headers \
  curl \
  gnupg \
  libxslt-dev \
  gd-dev \
  geoip-dev

RUN CONFARGS=$(nginx -V 2>&1 | sed -n -e 's/^.*arguments: //p') \
  tar -zxC /usr/src -f nginx.tar.gz && \
  cd /usr/src/nginx-$NGINX_VERSION && \
  ./configure --with-compat $CONFARGS \
    --add-dynamic-module="/ngx_devel_kit" \
    --add-dynamic-module="/set-misc-nginx-module" \
    --add-dynamic-module="/encrypted-session-nginx-module" && \
  make && make install

FROM nginx:${NGINX_VERSION}-alpine

COPY --from=builder /usr/local/nginx/modules/*.so /etc/nginx/modules/
COPY templates/nginx.conf /etc/nginx/
COPY templates/default.conf.template /etc/nginx/conf.d/

EXPOSE 8080
CMD PHOTOSTORAGE_PROXY_SECRET_MD5=$(echo -n $PHOTOSTORAGE_PROXY_SECRET | md5sum | awk '{ print $1 }') envsubst \
  '$$RAILS_HOST $$HOST $$PHOTOSTORAGE_PROXY_SECRET_IV $$PHOTOSTORAGE_PROXY_SECRET_MD5 $$PROXY_HOST $$PROXY_SUBDOMAIN' \
  < /etc/nginx/conf.d/default.conf.template > \
  /etc/nginx/conf.d/default.conf && nginx -g 'daemon off;'
